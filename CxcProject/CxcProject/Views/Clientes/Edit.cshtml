@model CxcProject.Models.Cliente
@{
    ViewData["Title"] = "Editar Cliente";
}

<div class="container mt-4">
    <h2 class="mb-4 text-warning">✏ Editar Cliente</h2>
    <div class="card shadow-sm">
        <div class="card-body">
            <form asp-action="Edit" id="formCliente">
                <input type="hidden" asp-for="Id" />
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <div class="mb-3">
                    <label asp-for="Nombre" class="form-label"></label>
                    <input asp-for="Nombre" class="form-control" />
                    <span asp-validation-for="Nombre" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Cedula" class="form-label"></label>
                    <input asp-for="Cedula" class="form-control" />
                    <span asp-validation-for="Cedula" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="LimiteCredito" class="form-label">Límite de Crédito</label>
                    <input asp-for="LimiteCredito" class="form-control" />
                    <span asp-validation-for="LimiteCredito" class="text-danger"></span>
                </div>

                <div class="form-check mb-3">
                    <input class="form-check-input" asp-for="Estado" />
                    <label class="form-check-label">@Html.DisplayNameFor(m => m.Estado)</label>
                </div>

                <div class="d-flex justify-content-between">
                    <a asp-action="Index" class="btn btn-secondary">⬅ Volver</a>
                    <button id="btnGuardar" type="submit" class="btn btn-warning text-white" disabled>💾 Guardar Cambios</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
            <script>
            document.getElementById("Cedula").addEventListener("input", function (e) {
                  let value = e.target.value.replace(/\D/g, '');
                  if (value.length > 3 && value.length <= 10) {
                      value = value.slice(0, 3) + '-' + value.slice(3);
                  } else if (value.length > 10) {
                      value = value.slice(0, 3) + '-' + value.slice(3, 10) + '-' + value.slice(10, 11);
                  }
                  e.target.value = value;
            });
            </script>
            <script>
                document.addEventListener("DOMContentLoaded", function() {
        const form = document.getElementById("formCliente");
        const btnGuardar = document.getElementById("btnGuardar");

        const originalValues = {};
        form.querySelectorAll("input[name]:not([type='hidden']), select[name], textarea[name]").forEach(input => {
            if (input.type === "checkbox" || input.type === "radio") {
                originalValues[input.name] = input.checked;
            } else {
                originalValues[input.name] = input.value.trim();
            }
        });

        function checkChanges() {
            let hasChanges = false;
            form.querySelectorAll("input[name]:not([type='hidden']), select[name], textarea[name]").forEach(input => {
                let original = originalValues[input.name];
                let current;

                if (input.type === "checkbox" || input.type === "radio") {
                    current = input.checked;
                } else {
                    current = input.value.trim();
                }

                if (original !== current) {
                    hasChanges = true;
                }
            });

            btnGuardar.disabled = !hasChanges;
        }

        form.querySelectorAll("input[name]:not([type='hidden']), select[name], textarea[name]").forEach(input => {
            input.addEventListener("input", checkChanges);
            input.addEventListener("change", checkChanges);
        });

        btnGuardar.disabled = true;
    });
        </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}